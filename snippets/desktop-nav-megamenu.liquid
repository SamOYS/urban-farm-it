{%- liquid
  unless limit
    assign limit = main_menu.links.size
  endunless
  unless offset
    assign offset = 0
  endunless
-%}

<ul
  class="site-nav site-navigation small--hide"
  {% unless disable_aria %}
    role="navigation" aria-label="Primary"
  {% endunless %}
>
  {%- for link in main_menu.links limit: limit offset: offset -%}
    {%- assign linkIndex = forloop.index -%}
    {%- liquid
      assign has_dropdown = false
      assign is_megamenu = false
      if link.links != blank
        assign has_dropdown = true
        if link.levels > 1
          assign is_megamenu = true
        endif
      endif
    -%}

    <li
      class="site-nav__item site-nav__expanded-item{% if has_dropdown %} site-nav--has-dropdown{% endif %}{% if is_megamenu %} site-nav--is-megamenu{% endif %}"
      {% if has_dropdown %}
        aria-haspopup="true"
      {% endif %}
    >
      <a
        href="{{ link.url }}"
        class="site-nav__link site-nav__link--underline{% if has_dropdown %} site-nav__link--has-dropdown{% endif %}"
      >
        {{ link.title }}
      </a>
      {%- if is_megamenu -%}
        {% assign megamenu_labels = shop.metafields.megamenu.megamenu_item_label %}
        {% assign menu_articles = shop.metafields.megamenu.articles %}
        {% assign menu_titles = shop.metafields.megamenu.menu-title %}
        {% assign supp_titles = shop.metafields.megamenu.supp-content-title %}
        {% assign enable_supp_content = shop.metafields.megamenu.enable_supp_content %}
        {% assign has_supp_content = false %}
        {% for label in megamenu_labels %}
          {% if label == link.title %}
            {% assign index = forloop.index0 %}
            {% unless enable_supp_content[index] == blank %}
              {% assign has_supp_content = true %}
            {% endunless %}
          {% endif %}
        {% endfor %}

        <div class="site-nav__dropdown megamenu text-left">
          <div class="page-width" style="display: flex; width: 100%;">       
            <div class="megamenu__main-content page-width" {% unless has_supp_content %}style="width: 100%;"{% endunless %}>
              {% for label in megamenu_labels %}
                {% if label == link.title %}
                  {% assign index = forloop.index0 %}      
                  {% unless menu_titles[index] == blank %}<div class="megamenu__title">{{ menu_titles[index] }}</div>{% endunless %}  
                  {% break %}
                  {% endif %}
              {% endfor %}
              <div class="megamenu__menu-wrapper">
                <div class="megamenu__links">
                  {% for childlink in link.links %}
                    <div
                      class="menu-link"
                      {% if childlink.links.size > 0 %}
                        data-menu-key="{{ linkIndex }}-{{ forloop.index }}"
                      {% endif %}
                    >
                      <a href="{{ childlink.url }}">
                        {% comment %}{%- if childlink.url contains '/collections/' -%}
                          {%- if collections[childlink.object.handle].image != blank -%}
                            <img
                              src="{{ collections[childlink.object.handle].image | img_url: '400x' }}"
                              alt="{{ collections[childlink.object.handle].title }} Product Category"
                              loading="lazy"
                              height="50"
                              width="50"
                            >
                          {%- endif -%}
                        {%- endif -%}
                        {% endcomment %}
                        <div>
                          {{ childlink.title }}
                          {%- if childlink.levels > 0 -%}
                            {% render 'icon-chevron', class: 'menu-link__chevron' %}
                          {%- endif -%}
                        </div>
                        {%- if childlink.url contains '/collections/'-%}{% if collections[childlink.object.handle].metafields.custom.navigation_label != blank %}<div class="menu-link__label" style="color: #c83939;">{{ collections[childlink.object.handle].metafields.custom.navigation_label }}</div>{% endif %}{%- endif -%}
                      </a>
                    </div>
                  {% endfor %}
                </div>
                <div class="megamenu__sub-menus">
                  {% for childlink in link.links %}
                    {% if childlink.links.size > 0 %}
                    <div
                      class="megamenu__sub-menu"
                        data-menu-key="{{ linkIndex }}-{{ forloop.index }}"
                    >
                      {% for grandchild in childlink.links %}
                        {% if grandchild.url == '#menu-link-title' %}
                          <div class="sub-menu-link sub-menu-title" style="font-family:'Josefin Sans';font-size: .9rem;text-transform: uppercase;letter-spacing: 0px;font-weight: bold;-webkit-text-stroke: 0.25px;">{{ grandchild.title }}</div>
                          {% else %}
                        <div class="sub-menu-link {% if grandchild.title contains 'Shop All' %}shop-all{% endif %}">
                          {% if grandchild.title contains 'Shop All' %}
                            <a href="{{ grandchild.url }}" style="font-weight: bold;">{{ grandchild.title }} â†’</a>
                            {% else %}
                            <a href="{{ grandchild.url }}">{{ grandchild.title }}</a>
                          {% endif %}            
                        </div>
                      {% endif %}
                      {% endfor %}
                    </div>
                      {% endif %}
                  {% endfor %}
                </div>
              </div>
            </div>
            {% if has_supp_content %}
            {% for label in megamenu_labels %}
              {% if label == link.title %}
                {% assign index = forloop.index0 %}
                {% assign handles = menu_articles[index] | split: '|' %}
                {% assign featured_blog = handles | first  %}
                {% assign featured_blog = featured_blog | split: "/" | first %} 
                <div class="megamenu__supplementary-content page-width">
                  <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                    <h4 class="megamenu__title" style="margin: 0;">{{ supp_titles[index] }}</h4>
                    <a href="{{ blogs[featured_blog].url }}" class="btn" style="background: var(--colorBtnPrimaryLight); font-size: .75rem;">See More Guides</a>
                    
                  </div>
                  <div class="megamenu_articles">
                    {% for article_handle in handles %}
                      <a href="{{ articles[article_handle].url }}" class="megamenu__article">
                        <div class="megamenu__article-image-wrapper">
                          <img
                            class="megamenu__article-image lazyload"
                            src="{{ articles[article_handle].image | img_url: "small" }}"
                            data-src="{{ articles[article_handle].image | img_url: "large" }}"
                            loading="lazy"
                            height="250"
                            width="300"
                          >
                        </div>   
                        <div class="megamenu__article-title">{{ articles[article_handle].title }}</div>
                      </a>
                    {% endfor %}
                  </div>
                </div>
              {% endif %}
            {% endfor %}
            {% endif %}
          </div>
        </div>
        <script>
          document.addEventListener('DOMContentLoaded', initializeMegamenuComponents);
          /**
           * Entry point for initializing all Megamenu components on the page.
           */
          function initializeMegamenuComponents() {
            const megamenuContainers = document.querySelectorAll('.megamenu');
            megamenuContainers.forEach(container => {
              initializeIndividualMegamenu(container);
              // Workaround: Reset the megamenu when the mouse leaves the area
              container.addEventListener('mouseleave', () => resetMegamenu(container));
            });
          }
          
          /**
           * Initializes an individual Megamenu container.
           * @param {HTMLElement} megamenuContainer - The container element for the Megamenu.
           */
          function initializeIndividualMegamenu(megamenuContainer) {
            let currentlyActiveSubMenu = null; // Reference to the currently active sub-menu
            let currentlyActiveMenuItem = null; // Reference to the currently active menu item
          
            megamenuContainer.addEventListener('mouseover', function(event) {
              const updatedActiveElements = handleMegamenuHover(event, this, currentlyActiveSubMenu, currentlyActiveMenuItem);
              currentlyActiveSubMenu = updatedActiveElements.subMenu;
              currentlyActiveMenuItem = updatedActiveElements.menuItem;
            });
          }
          
          /**
           * Handles hover events within a Megamenu container.
           * @param {Event} event - The triggered mouseover event.
           * @param {HTMLElement} megamenuContainer - The Megamenu container where the event was triggered.
           * @param {HTMLElement} currentlyActiveSubMenu - Reference to the currently active sub-menu.
           * @param {HTMLElement} currentlyActiveMenuItem - Reference to the currently active menu item.
           * @returns {Object} - Updated references to the currently active sub-menu and menu item.
           */
          function handleMegamenuHover(event, megamenuContainer, currentlyActiveSubMenu, currentlyActiveMenuItem) {
            const targetedMenuItem = event.target.closest('.menu-link');
            if (!targetedMenuItem) return { subMenu: currentlyActiveSubMenu, menuItem: currentlyActiveMenuItem };
          
            const targetedMenuKey = targetedMenuItem.getAttribute('data-menu-key');
            const newlyTargetedSubMenu = megamenuContainer.querySelector(`.megamenu__sub-menu[data-menu-key="${targetedMenuKey}"]`);
          
            deactivateSubMenu(currentlyActiveSubMenu, newlyTargetedSubMenu);
            deactivateMenuItem(currentlyActiveMenuItem, targetedMenuItem);
          
            activateSubMenu(newlyTargetedSubMenu);
            activateMenuItem(targetedMenuItem);
          
            return { subMenu: newlyTargetedSubMenu, menuItem: targetedMenuItem };
          }
          
          /**
           * Deactivates the provided sub-menu if it is not the same as the new target.
           * @param {HTMLElement} currentlyActiveSubMenu - The currently active sub-menu to deactivate.
           * @param {HTMLElement} newlyTargetedSubMenu - The newly targeted sub-menu.
           */
          function deactivateSubMenu(currentlyActiveSubMenu, newlyTargetedSubMenu) {
            if (currentlyActiveSubMenu && currentlyActiveSubMenu !== newlyTargetedSubMenu) {
              currentlyActiveSubMenu.removeAttribute('active');
            }
          }
          
          /**
           * Deactivates the provided menu item if it is not the same as the new target.
           * @param {HTMLElement} currentlyActiveMenuItem - The currently active menu item to deactivate.
           * @param {HTMLElement} newlyTargetedMenuItem - The newly targeted menu item.
           */
          function deactivateMenuItem(currentlyActiveMenuItem, newlyTargetedMenuItem) {
            if (currentlyActiveMenuItem && currentlyActiveMenuItem !== newlyTargetedMenuItem) {
              currentlyActiveMenuItem.removeAttribute('active');
            }
          }
          
          /**
           * Activates the provided sub-menu.
           * @param {HTMLElement} newlyTargetedSubMenu - The newly targeted sub-menu to activate.
           */
          function activateSubMenu(newlyTargetedSubMenu) {
            if (newlyTargetedSubMenu) {
              newlyTargetedSubMenu.setAttribute('active', '');
            }
          }
          
          /**
           * Activates the provided menu item.
           * @param {HTMLElement} newlyTargetedMenuItem - The newly targeted menu item to activate.
           */
          function activateMenuItem(newlyTargetedMenuItem) {
            if (newlyTargetedMenuItem) {
              newlyTargetedMenuItem.setAttribute('active', '');
            }
          }
          
          /**
           * Resets the Megamenu by removing active states from sub-menus and menu items.
           * @param {HTMLElement} megamenuContainer - The Megamenu container to reset.
           */
          function resetMegamenu(megamenuContainer) {
            const activeSubMenus = megamenuContainer.querySelectorAll('.megamenu__sub-menu[active]');
            activeSubMenus.forEach(menu => menu.removeAttribute('active'));
          
            const activeMenuItems = megamenuContainer.querySelectorAll('.menu-link[active]');
            activeMenuItems.forEach(item => item.removeAttribute('active'));
          }
      </script>
        <style>
          .site-nav__link, .megamenu__title {
            font-family: 'Josefin Sans';
            letter-spacing: 0px;
            font-weight: bold;

          }

          .site-nav__link {
            font-size: .9rem !important;
            -webkit-text-stroke: .25px;
          }

          .megamenu {
            display: flex !important;
          }

          .megamenu__main-content {
            width: 60%;
          }

          .megamenu__menu-wrapper {
            display: flex;
          }

          .megamenu__main-content a {
            background: none !important;
            background-color: none !important;
          }

          .megamenu__title {
            font-size: clamp(16px,5vw,18px);
            -webkit-text-stroke: .5px;
          }

          .megamenu__supplementary-content {
            width: 40%;
          }

          .megamenu__links {
            margin: 0;
          }


          .megamenu__sub-menu {
            display: none;
            height: 100%;
            position: relative;
            padding-bottom: 3.5rem;
          }

          .megamenu__sub-menu[active] {
            display: block;
            background-color: #f7f7f7;
          }

          .sub-menu-link.shop-all {
            position: absolute;
            left: 0;
            bottom: .5rem;
          }

          .megamenu__links, .megamenu__sub-menus {
            max-width: 50%;
            min-width: 33%;
            width: 50%;
          }

          .megamenu__sub-menus {
            min-width: 50%;
          }

          .menu-link, .sub-menu-link {
            position: relative;
            padding:  .5rem .5rem .5rem 1.5rem;
          }

          .menu-link {
            padding-right: 2.5rem;
          }

          .menu-link > a, .sub-menu-link > a {
            display: flex !important;
            align-items: center;
            gap: 1rem;
          }

          .menu-link > a > img {
            width: 30px;
            height: 30px;
            object-fit: cover;
            border-radius: 2px;
          }

          /*.menu-link::before {
            content: "";
            top: 0;
            left: 0;
            width: 5px;
            height: 100%;
            background-color: green;
            position: absolute;
            opacity: 0;
          }*/
          .menu-link:hover, .menu-link[active], .sub-menu-link:hover a {
            background-color: #f7f7f7;
            color: green;
          }

          .menu-link:hover::before, .menu-link[active]::before {
            opacity: 1;
          }

          .menu-link__chevron {
            width: 12.5px;
            height: 10px;
            transform: translateY(-50%) rotate(-90deg);
            position: absolute;
            top: 50%;
            right: 15px;
            transition: right .2s ease-in;
          }

          .menu-link:hover .menu-link__chevron, .menu-link[active] .menu-link__chevron {
            right: 12.5px;
          }

          .megamenu_articles {
            display: flex;
            gap: 1rem;
          }

          .megamenu__article {
            /* width: 50%; */
            overflow: hidden;
            position: relative;
          }

          .megamenu__article-image-wrapper {
            position: relative;
            width: 100%;
            padding-bottom: 56.25%; 
            overflow: hidden;
          }

          .megamenu__article-image {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            display: block;
            border-radius: 2px;
            transition: transform .2s ease-in;
          }

          .megamenu__article-image:hover {
            transform: scale(1.05);
          }

          .megamenu__article-title {
              font-size: .85rem;
              position: absolute;
              bottom: 4px;
              left: 50%;
              transform: translateX(-50%);
              background-color: #000;
              color: #fff;
              padding: 0 0.5rem;
              width: 100%;
              text-align: center;
          }

          @media only screen and (max-width: 1200px) {
            .megamenu__main-content {
              width: 100%;
            }
            .megamenu__supplementary-content {
              display: none;
            }
          }
        </style>
      {%- elsif has_dropdown -%}
        <ul class="site-nav__dropdown text-left">
          {%- for childlink in link.links -%}
            {%- liquid
              assign has_sub_dropdown = false
              if childlink.links != blank
                assign has_sub_dropdown = true
              endif
            -%}

            <li class="{% if has_sub_dropdown %} site-nav__deep-dropdown-trigger{% endif %}">
              <a
                href="{{ childlink.url }}"
                class="site-nav__dropdown-link site-nav__dropdown-link--second-level{% if has_sub_dropdown %} site-nav__dropdown-link--has-children{% endif %}"
              >
                {{ childlink.title | escape }}
                {%- if has_sub_dropdown -%}
                  <svg
                    aria-hidden="true"
                    focusable="false"
                    role="presentation"
                    class="icon icon--wide icon-chevron-down"
                    viewBox="0 0 28 16"
                  >
                    <path d="M1.57 1.59l12.76 12.77L27.1 1.59" stroke-width="2" stroke="#000" fill="none" fill-rule="evenodd"/>
                  </svg>
                {%- endif -%}
              </a>
              {%- if has_sub_dropdown -%}
                <ul class="site-nav__deep-dropdown">
                  {%- for grandchildlink in childlink.links -%}
                    <li>
                      <a href="{{ grandchildlink.url }}" class="site-nav__dropdown-link">
                        {{- grandchildlink.title | escape -}}
                      </a>
                    </li>
                  {%- endfor -%}
                </ul>
              {%- endif -%}
            </li>
          {%- endfor -%}
        </ul>
      {%- endif -%}
    </li>
  {%- endfor -%}
</ul>
