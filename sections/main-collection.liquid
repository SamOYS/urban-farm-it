{%- liquid
  assign current_filter_size = 0

  for filter in collection.filters
    assign current_filter_size = current_filter_size | plus: filter.active_values.size
  endfor
-%}
<div
  class="collection-content"
  data-section-id="{{ section.id }}"
  data-section-type="collection-grid"
>
  <div id="CollectionAjaxContent">
    <div class="page-width">
      <div class="grid collection-grid">
        <div class="collection-grid__header grid__item">
          {%- render 'breadcrumbs' -%}
          <h1 class="section-header__title">{{- collection.title -}}</h1>
            {%- if collection.handle == 'wholesale-mushroom-spawn' -%}
              <div
                style="
                  display: flex;
                  align-items: center;
                  font-size: 12px;
                  gap: .25rem;
                  background: #f3f3f3;
                  width: fit-content;
                  padding: 0 .5rem;
                  margin-bottom: 0.5rem;
                  border-radius: 2px;
                "
              >
                <div>In Partnership with</div>
                <img
                  src="https://cdn.shopify.com/s/files/1/0699/1940/8408/files/Logo-Mycelia-zonder-achtergrond.png?v=1700584470"
                  style="width: 60px;"
                >
              </div>
            {%- endif -%}
                
          {%- if collection.description != blank and current_filter_size == 0 -%}
            <div class="rte">
              <div class="collection__description" active>
                <div class="collection__description--text" active>
                  {{ collection.description }}
                </div>
                <div
                  class="collection__description--read-more"
                  data-alternate-labels='["Read More", "Read Less"]'
                >
                  Read More
                </div>
              </div>
              {% if collection.handle == 'mushroom-growing-kits' or collection.handle == 'mushroom-log-kits' or collection.handle == 'black-friday' %}
              <!-- <div class="medium-up--hide" {% unless collection.metafields.custom.related_collections %}style="margin-bottom: .5rem;"{% endunless %}>
                  <a
                  data-micromodal-trigger="modal-1"
                  style="
                    display: flex;
                    gap: 0.5rem;
                    align-items: center;
                    width: fit-content;
                    border: none;
                  "
                >
                  <span class="info-icon">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      xmlns:xlink="http://www.w3.org/1999/xlink"
                      fill="#0000af"
                      version="1.1"
                      id="Capa_1"
                      width="800px"
                      height="800px"
                      viewBox="0 0 416.979 416.979"
                      xml:space="preserve"
                    >
                      <g>
                      	<path d="M356.004,61.156c-81.37-81.47-213.377-81.551-294.848-0.182c-81.47,81.371-81.552,213.379-0.181,294.85   c81.369,81.47,213.378,81.551,294.849,0.181C437.293,274.636,437.375,142.626,356.004,61.156z M237.6,340.786   c0,3.217-2.607,5.822-5.822,5.822h-46.576c-3.215,0-5.822-2.605-5.822-5.822V167.885c0-3.217,2.607-5.822,5.822-5.822h46.576   c3.215,0,5.822,2.604,5.822,5.822V340.786z M208.49,137.901c-18.618,0-33.766-15.146-33.766-33.765   c0-18.617,15.147-33.766,33.766-33.766c18.619,0,33.766,15.148,33.766,33.766C242.256,122.755,227.107,137.901,208.49,137.901z"/>
                      </g>
                    </svg>
                  </span>
                  <span class="info-text">Kit Types Explained</span></a
                >
                  
                </div> -->
                {% endif %}
            </div>
          {%- endif -%}
        </div>
        <div class="collection-grid__sidebar grid__item">
          {%- render 'collection-grid-filters',
            collection: collection,
            enable_sidebar: section.settings.enable_sidebar,
            filter_style: section.settings.filter_style,
            collapsed: section.settings.collapsed,
            enable_color_swatches: section.settings.enable_color_swatches
          -%}
        </div>
        <div class="collection-grid__product-grid grid__item">
          {%- liquid
            for block in section.blocks
              case block.type
                when 'product_grid'
                  assign paginate_by = block.settings.per_row | times: block.settings.rows_per_page
              endcase
            endfor
          -%}
          {%- paginate collection.products by paginate_by -%}
            {%- for block in section.blocks -%}
              <div
                {{ block.shopify_attributes }}
                {%- if block.type == 'product-grid' -%}
                  data-scroll-to
                {%- endif -%}
              >
                {%- case block.type -%}
                  {%- when 'collection_description' -%}
                    {%- if collection.description != blank and current_filter_size == 0 -%}
                      {% comment %}
                        <div class="rte">
                          <div class="collection__description" active>
                            <div
                              class="collection__description--read-more"
                              data-alternate-labels='["View More", "View Less"]'
                            >
                              View More
                            </div>
                            <div class="collection__description--text" active>
                              {{ collection.description }}
                            </div>
                          </div>
                        </div>
                      {% endcomment %}
                      {%- render 'collection-related-categories' -%}
                    {%- endif -%}

                  {%- when 'subcollections' -%}
                    {%- if paginate.current_page == 1 and current_filter_size == 0 -%}
                      {%- render 'subcollections', per_row: block.settings.subcollections_per_row -%}
                    {%- endif -%}
                  {%- when 'product_grid' -%}
                    <div data-scroll-to>
                      {% render 'collection-grid',
                        collection: collection,
                        items: collection.products,
                        enable_sidebar: section.settings.enable_sidebar,
                        filter_style: section.settings.filter_style,
                        enable_sort: section.settings.enable_sort,
                        enable_collection_count: block.settings.enable_collection_count,
                        per_row: block.settings.per_row,
                        mobile_flush_grid: block.settings.mobile_flush_grid,
                        quick_shop_enable: settings.quick_shop_enable
                      %}
                      {%- if paginate.pages > 1 -%}
                        {%- render 'pagination', paginate: paginate -%}
                      {%- endif -%}
                    </div>
                {%- endcase -%}
              </div>
            {%- endfor -%}
          {%- endpaginate -%}
        </div>
      </div>
    </div>
  </div>
</div>

{%- if template.name == 'collection' -%}
  {% if collection.handle == 'mushroom-growing-kits' or collection.handle == 'mushroom-log-kits' or collection.handle == 'black-friday' %}
    {% render 'kit-types-modal' %}
  {%- endif -%}
{%- endif -%}

<script type="text/javascript">
  const isDesktop = () => window.innerWidth >= 1024;
  const initCollectionDescriptionToggle = () => {
    const collectionDescription = document.querySelector('.collection__description');
    if (collectionDescription) {
      const collectionDescriptionText = collectionDescription.querySelector('.collection__description--text');
      const readMoreBtn = document.querySelector('.collection__description--read-more');
      const [defaultLabel, alternateLabel] = JSON.parse(readMoreBtn.getAttribute('data-alternate-labels'));
      const toggleDescription = () => {
        const isActive = collectionDescription.hasAttribute('active');
        collectionDescription.toggleAttribute('active');
        collectionDescriptionText.toggleAttribute('active');
        readMoreBtn.textContent = isActive ? alternateLabel : defaultLabel;
      }
      readMoreBtn.addEventListener('click', toggleDescription);
      if (isDesktop() && collectionDescription.hasAttribute('active')) {
        toggleDescription();
      }
    }
  }

  
  let collectionReloaded = false;

  function initializeCustomJS() {
    initCollectionDescriptionToggle();
  }

  initializeCustomJS();
  document.addEventListener('collection:reloaded', function() {
    collectionReloaded = true;
    initializeCustomJS();
    MicroModal.init();
  });

</script>

{%- if section.settings.enable_sidebar == false
  or section.settings.filter_style == 'drawer'
  or collection.filters.size == 0
-%}
  {% comment %}
    Override grid styles if sidebar is disabled
  {% endcomment %}
  {% style %}
    .collection-content .grid__item--sidebar { width: 0; padding:0; }
    .collection-content .grid__item--content { width: 100%; }
    .grid__item--sidebar { position: static; overflow: hidden; }
  {% endstyle %}
{%- endif -%}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "CollectionPage",
    {% if collection.description != blank %}
      "description": {{ collection.description | strip_html | json }},
    {% endif %}
    {% if page_image %}
      {% assign image_size = page_image.width | append: 'x' %}
      "image": {
        "@type": "ImageObject",
        "height": {{ page_image.height | json }},
        "url": {{ page_image | img_url: image_size | prepend: "https:" | json }},
        "width": {{ page_image.width | json }}
      },
    {% endif %}
    "name": {{ collection.title | json }}
  }
</script>

{% schema %}
{
  "name": "t:sections.main-collection.name",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.main-collection.settings.header_filtering_and_sorting"
    },
    {
      "type": "checkbox",
      "id": "enable_sidebar",
      "label": "t:sections.main-collection.settings.enable_sidebar.label",
      "default": true,
      "info": "t:sections.main-collection.settings.enable_sidebar.info"
    },
    {
      "type": "checkbox",
      "id": "collapsed",
      "label": "t:sections.main-collection.settings.collapsed.label",
      "default": true
    },
    {
      "type": "select",
      "id": "filter_style",
      "label": "t:sections.main-collection.settings.filter_style.label",
      "default": "sidebar",
      "options": [
        {
          "value": "sidebar",
          "label": "t:sections.main-collection.settings.filter_style.options.sidebar.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection.settings.filter_style.options.drawer.label"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "enable_color_swatches",
      "label": "t:sections.main-collection.settings.enable_color_swatches.label",
      "info": "t:sections.main-collection.settings.enable_color_swatches.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sort",
      "label": "t:sections.main-collection.settings.enable_sort.label",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "collection_description",
      "name": "t:sections.main-collection.blocks.collection_description.name",
      "limit": 1
    },
    {
      "type": "product_grid",
      "name": "t:sections.main-collection.blocks.products.name",
      "settings": [
        {
          "type": "checkbox",
          "id": "enable_collection_count",
          "label": "t:sections.main-collection.blocks.products.settings.enable_collection_count.label",
          "default": true
        },
        {
          "type": "range",
          "id": "per_row",
          "label": "t:sections.main-collection.blocks.products.settings.per_row.label",
          "default": 4,
          "min": 2,
          "max": 5,
          "step": 1
        },
        {
          "type": "range",
          "id": "rows_per_page",
          "label": "t:sections.main-collection.blocks.products.settings.rows_per_page.label",
          "default": 7,
          "min": 3,
          "max": 20,
          "step": 1
        },
        {
          "type": "checkbox",
          "id": "mobile_flush_grid",
          "label": "t:sections.main-collection.blocks.products.settings.mobile_flush_grid.label",
          "default": false
        }
      ],
      "limit": 1
    },
    {
      "type": "subcollections",
      "name": "t:sections.main-collection.blocks.subcollections.name",
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-collection.blocks.subcollections.settings.content"
        },
        {
          "type": "range",
          "id": "subcollections_per_row",
          "label": "t:sections.main-collection.blocks.subcollections.settings.subcollections_per_row.label",
          "default": 5,
          "min": 2,
          "max": 5,
          "step": 1
        }
      ],
      "limit": 1
    }
  ]
}
{% endschema %}
